	╭── ┌─╮ ╭─╮
	╰─╮ │ ╎ │╌│ ╭─╮ ╭─╮
	──╯ └─╯ ╯ ╰ │╭╯ │╭╯
	═══════════════════

SDApp Backend 


Core-Files of the SDApp
Complete rewrite of the old, bad Spiritdesktop-Application. It will
download a timetable of a class of the 'FH-Schmalkalden' (Computer
Science section) via cURL and parse the JSON-File (JSONcpp).
Data is stored as 3-dimensional array of events.

Contains:
spirit/schedule.h
------------------------------------------------------------------
- struct event:
    string eventType;
    string eventName;
    string docentName;
    string className;
    string day;
    string building;
    string room;
    string time;
    string week;
    string group;

- class schedule()
	- void cdownload(string sclass);
		downloads schedule for a specific class and saves
		it as schedule.json
	
	- void initJson();
		parses the schedule.json to the class
		can throw spError::JSON_ERROR
			  spError::FALSE_NAMING_ERROR
	
	- map<string,int>: hashtable
		string: classname
		int: number of group;
		
	- initGrp(map<string,int>);
		initalisation of 3D array of events
		requires hashtable of event names & group number
		can throw spError::TIME_PARSE_ERROR
			  spError::DAY_PARSE_ERROR
			  spError::WEEK_PARSE_ERROR
			  spError::GROUP_PARSE_ERROR
		
	- vector<string> grouphash();
		returns a array of string of eventNames whose events
		are organized in groups
		
	- event * getactual();
		pointer to actual event
		returns pointer to NULL if none
		
	- event * getnext();
		pointer to next event;
		returns pointer to NULL if none
		can throw spError::NO_EVENT_ERROR
		
	- double timedifference();
		time until next event in seconds
		can throw spError::NO_EVENT_ERROR
		
	- void getTimetable(event tcopy[2][7][7]);
		inputs a 3D-array of events, fills it with
		the actual timetable
		
	- void getActualDay(event tcopy[7]);
		inputs a 1D-array of events, fills it with events
		of the actual day
		
spirit/news.h
------------------------------------------------------------------
- struct article:
    string semester;
    string name;
    string subject;
    string writer;
    string lifecycle;
    string nr;
    string id;
    string date;
    string news;
    
- class news()
	- void cdownload();
		downloads the news and saves it as news.json
		
	- void init();
		parses the news.json to the class
		can throw spError::JSON_ERROR
			  spError::NO_NEWS_ERROR
			  spError::FALSE_NAMING_ERROR

	- vector<article> get(string filter)
		string filter: class name to filter to
		returns a vector of articles that are filtered by
		string filter
			"alle" returns every article

spirit/exception.h
------------------------------------------------------------------
- class spError
    - enum Code
	NO_ERROR,           //0; unused, only for formatting
        TIME_PARSE_ERROR,   //1; scheduled time invalid
        DAY_PARSE_ERROR,    //2; scheduled day invalid
        WEEK_PARSE_ERROR,   //3; scheduled week invalid
        GROUP_PARSE_ERROR,  //4; group number not 0-9
        JSON_ERROR,         //5; JSON-code not in correct form
        CURL_ERROR,         //6; curl write / download fails
        SAVE_FAIL_ERROR,    //7; couldn't open file
        HASH_MAP_ERROR,     //8; currently unused
        NO_EVENT_ERROR,     //9; no event in timetable
        NO_NEWS_ERROR,      //10; no news in journal
        FALSE_NAMING_ERROR  //11; unexpected naming in json

required dependencies:
libcURL		http://curl.haxx.se/
JSON-cpp	http://jsoncpp.sourceforge.net/


Spirit itself can be found at:
http://spirit.fh-schmalkalden.de
https://github.com/spirit-fhs


Spiritdesktop and SDApp are not(!) "officialy" supported by the University
of Applied Science Schmalkalden or PADS-LAB.